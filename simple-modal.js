// Generated by CoffeeScript 1.3.3
var __slice = [].slice;

(function($, window) {
  var SimpleModal;
  SimpleModal = (function() {
    var MODAL_MARGIN;

    MODAL_MARGIN = 100;

    function SimpleModal(el, settings) {
      var _this = this;
      this.el = el;
      this.settings = {
        zIndex: 9999,
        showBackdrop: true,
        spinnerThreshold: 400,
        backdropOpacity: 0.1
      };
      $.extend(this.settings, settings);
      this.spinnerTimer = null;
      this.activeRequest = null;
      this.spinner = null;
      this.modal = null;
      $(document).keyup(function(e) {
        if (e.keyCode === 27) {
          return _this.close();
        }
      });
      $(window).resize(function() {
        return _this.resize();
      });
    }

    SimpleModal.prototype.open = function() {
      var $backdrop, $body, $loading, content, localData, self, source,
        _this = this;
      $body = $("body");
      this.close;
      source = this.el.attr("href");
      localData = source.charAt(0) === "#";
      if (this.settings.showBackdrop) {
        $backdrop = $("<div id='remote-modal-backdrop'>").css({
          display: "none",
          backgroundColor: "#000",
          width: "100%",
          height: "100%",
          position: "fixed",
          top: 0,
          left: 0,
          zIndex: this.settings.zIndex,
          opacity: this.settings.backdropOpacity
        }).click(function() {
          return _this.close();
        }).appendTo($body).fadeIn();
      }
      if (!localData) {
        this.spinner = null;
        $loading = $("<div id='remote-modal-loading'>").css({
          position: "fixed",
          top: "50%",
          left: "50%",
          width: "100%",
          height: "100%",
          zIndex: this.settings.zIndex + 1
        }).click(function() {
          return _this.close();
        });
        this.spinnerTimer = setTimeout(function() {
          $loading.appendTo($body);
          this.spinner = new Spinner().spin();
          return $loading.append(this.spinner.el);
        }, this.settings.spinnerThreshold);
      }
      this.modal = $("<div id='remote-modal'>").css({
        display: "none",
        zIndex: this.settings.zIndex + 2,
        position: "fixed",
        top: "50%",
        left: "50%",
        maxWidth: $(window).width() - MODAL_MARGIN,
        maxHeight: $(window).height() - MODAL_MARGIN,
        overflow: "auto",
        backgroundColor: "white",
        borderRadius: "8px",
        boxShadow: "0 1px 3px 1px rgba(0,0,0,0.3)",
        padding: "20px"
      });
      if (localData) {
        content = $(source).clone();
        this.fill(content);
        return this.modal.fadeIn();
      } else {
        self = this;
        return this.request = $.ajax({
          url: source,
          type: this.el.attr("data-method") || "GET",
          success: function(data) {
            clearTimeout(_this.spinnerTimer);
            if (_this.spinner) {
              _this.spinner.stop();
            }
            $loading.hide();
            return setTimeout(function() {
              _this.fill(data);
              return _this.modal.fadeIn();
            }, 200);
          },
          error: function() {
            return _this.modal.html("Could not load page");
          }
        });
      }
    };

    SimpleModal.prototype.fill = function(content) {
      return this.modal.appendTo($("body")).html(content).css({
        marginTop: (this.modal.outerHeight() / 2) * -1,
        marginLeft: (this.modal.outerWidth() / 2) * -1
      });
    };

    SimpleModal.prototype.close = function() {
      $("#remote-modal-backdrop").remove();
      $("#remote-modal-loading").remove();
      $("#remote-modal").remove();
      this.spinner = null;
      this.modal = null;
      if (this.spinnerTimer) {
        clearTimeout(this.spinnerTimer);
        this.spinnerTimer = null;
      }
      if (this.request) {
        this.request.abort();
        return this.request = null;
      }
    };

    SimpleModal.prototype.resize = function() {
      if (this.modal.length) {
        this.modal.css({
          maxWidth: $(window).width() - MODAL_MARGIN,
          maxHeight: $(window).height() - MODAL_MARGIN
        });
        return this.modal.css({
          marginTop: (this.modal.outerHeight() / 2) * -1,
          marginLeft: (this.modal.outerWidth() / 2) * -1
        });
      }
    };

    return SimpleModal;

  })();
  $.extend($.fn, {
    simpleSlider: function() {
      var params, settingsOrMethod;
      settingsOrMethod = arguments[0], params = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      return $(this).each(function() {
        var settings;
        settings = settingsOrMethod;
        $(this).data("modal-object", new SimpleModal($(this), settings));
        return $(this).click(function() {
          modal.open();
          return false;
        });
      });
    }
  });
  return $(function() {
    return $("[data-modal]").each(function() {
      var $el;
      $el = $(this);
      return $el.simpleModal();
    });
  });
})(this.jQuery || this.Zepto, this);
